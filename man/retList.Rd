% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/retList.R
\name{retList}
\alias{funNames}
\alias{retList}
\title{Return your current environment as list}
\usage{
retList(class = NULL, exports = NULL, super = list())

funNames()
}
\arguments{
\item{class}{character giving the class name}

\item{exports}{character with the names to include}

\item{super}{object returned by this function which should be extended}
}
\description{
This functions can be used to construct a list with class attribute and merged with another list called super.

\code{funNames} returns the names of functions in the environment from which it is called.
}
\examples{
Test <- function(.x) {
  force(.x)
  getX <- function() .x
  retList("Test")
}

Test(2)$getX()

### Rational numbers example with infix operators and print method

Rational <- function(numer, denom) {

e <- environment()
as.environment <- function() e

gcd <- function(a, b) if(b == 0) a else Recall(b, a \%\% b)

g <- gcd(numer, denom)
numer <- numer / g
denom <- denom / g

print <- function() cat(paste0(numer, "/", denom, "\\n"))

".+" <- function(that) {
  Rational(numer = numer * that$denom + that$numer * denom,
           denom = denom * that$denom)
}

neg <- function() {
  Rational(numer = -numer,
           denom = denom)
}

".-" <- function(that) {
  self + that$neg()
}

# Return only what should be visible from this scope:
self <- retList(c("Rational", "Infix", "Print"),
                c("numer", "denom", "neg", "print", "as.environment"))
self

}

rational <- Rational(2, 3)
rational + rational
rational - rational
}
\seealso{
\link{ls}, \link{+.Infix}, \link{print.Print}
}

